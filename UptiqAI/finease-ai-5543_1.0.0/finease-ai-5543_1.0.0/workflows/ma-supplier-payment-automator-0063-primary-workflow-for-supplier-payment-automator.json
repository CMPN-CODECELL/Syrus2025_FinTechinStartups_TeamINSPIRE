{
  "_id": "a890e8c8-5bc8-43fd-bdbf-bf26a6e4098c",
  "aiPersonaId": "68477062-6637-4338-946b-731946563ad0",
  "integrationId": "ma-supplier-payment-automator-0063-primary-workflow-for-supplier-payment-automator",
  "isMiniAgentPrimaryWorkflow": true,
  "name": "Primary Workflow for Supplier Payment Automator",
  "publisherAccountId": "6a852086-e073-4065-8345-aff4b98d9ac1",
  "startTaskId": "80b376ee-3f2a-4c23-8872-977ac86f955e",
  "status": "Active",
  "tasks": [
    {
      "_id": "80b376ee-3f2a-4c23-8872-977ac86f955e",
      "type": "PassThrough",
      "config": {
        "name": "Pass Through",
        "description": "Pass through the input to the output"
      },
      "transitions": [
        {
          "_id": "f199f589-6d1a-4427-95d2-b943801e40ba-80b376ee-3f2a-4c23-8872-977ac86f955e",
          "nextTask": "f199f589-6d1a-4427-95d2-b943801e40ba",
          "name": "If query doesnt exists",
          "rules": [
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "2dcba8ce-9483-4ea8-9d77-c6afcad05d29-80b376ee-3f2a-4c23-8872-977ac86f955e",
          "nextTask": "2dcba8ce-9483-4ea8-9d77-c6afcad05d29",
          "name": "If intents are already classified",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.intents"
            },
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "80b376ee-3f2a-4c23-8872-977ac86f955e-daea3d92-b77e-42ce-a780-08277d941368",
          "name": "If query exists",
          "nextTask": "daea3d92-b77e-42ce-a780-08277d941368",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            },
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.intents"
            }
          ]
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$input.query"
        },
        {
          "name": "conversationId",
          "referencePath": "$input.conversationId"
        }
      ]
    },
    {
      "_id": "f199f589-6d1a-4427-95d2-b943801e40ba",
      "type": "Input",
      "config": {
        "name": "User Input",
        "description": "Get user input",
        "type": "string"
      },
      "transitions": [
        {
          "_id": "f199f589-6d1a-4427-95d2-b943801e40ba-daea3d92-b77e-42ce-a780-08277d941368",
          "name": "Default",
          "nextTask": "daea3d92-b77e-42ce-a780-08277d941368"
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$output.userInput"
        },
        {
          "name": "selfLoopMiniAgent",
          "referencePath": "true"
        }
      ]
    },
    {
      "_id": "daea3d92-b77e-42ce-a780-08277d941368",
      "type": "Loader",
      "config": {
        "name": "Loader",
        "description": "Display loader message",
        "type": "loader",
        "text": "Just a moment... identifying the best approach to assist you."
      },
      "transitions": [
        {
          "_id": "daea3d92-b77e-42ce-a780-08277d941368-2e0b7580-21cf-4e83-80d3-9ec3111859e2",
          "name": "Default",
          "nextTask": "2e0b7580-21cf-4e83-80d3-9ec3111859e2"
        }
      ]
    },
    {
      "_id": "2e0b7580-21cf-4e83-80d3-9ec3111859e2",
      "type": "IntentClassification",
      "config": {
        "name": "Intent Classification",
        "description": "Classify the intent of the user message",
        "modelId": "4cf651d9-edf3-455f-a22e-53cc67fcc07b",
        "intents": [
          {
            "name": "Process Automated Payments",
            "description": "Handles the automation of payments to suppliers using platforms like Razorpay or PayPal.",
            "examples": [
              "Automate the payment to supplier X.",
              "Process the payment through Razorpay.",
              "Use PayPal to pay the supplier."
            ]
          },
          {
            "name": "Ensure Compliance",
            "description": "Ensures all payments comply with relevant financial regulations.",
            "examples": [
              "Check compliance for this payment.",
              "Ensure this payment meets regulatory standards.",
              "Verify compliance before processing the payment."
            ]
          }
        ],
        "query": "$agent.query"
      },
      "transitions": [
        {
          "_id": "2e0b7580-21cf-4e83-80d3-9ec3111859e2-2dcba8ce-9483-4ea8-9d77-c6afcad05d29",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "true"
            }
          ],
          "nextTask": "2dcba8ce-9483-4ea8-9d77-c6afcad05d29"
        },
        {
          "_id": "2e0b7580-21cf-4e83-80d3-9ec3111859e2-7a30500f-e25a-4074-8783-2d9dd9e1faeb",
          "name": "If No Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "false"
            }
          ],
          "nextTask": "7a30500f-e25a-4074-8783-2d9dd9e1faeb"
        }
      ]
    },
    {
      "_id": "2dcba8ce-9483-4ea8-9d77-c6afcad05d29",
      "type": "JSFunction",
      "config": {
        "name": "JS Function",
        "description": "Execute JS function",
        "code": "\nconst main = () => {\n    const currentExecutionId = _id;\n    const intents = agent?.icIntents?.[currentExecutionId] || input.intents;\n    const currentIndex = agent?.icLoopIndexes?.[currentExecutionId] || 0;\n    const currentIntent = intents[currentIndex] || {};\n    const { intent, task } = currentIntent;\n    const state = currentIndex === intents.length ? 'end' : 'continue'\n    const icLoopIndexes = { ...(agent?.icLoopIndexes || {}), [_id]: state === 'end' ? undefined : currentIndex + 1 };\n    const icIntents = { ...(agent?.icIntents || {}), [_id]: state === 'end' ? undefined : intents };\n    return { ...input, intent, state: currentIndex === intents.length ? 'end' : 'continue', icLoopIndexes, icIntents, query: task };\n};\n\nmain()\n"
      },
      "globalVariables": [
        {
          "referencePath": "$output.icLoopIndexes",
          "name": "icLoopIndexes"
        },
        {
          "referencePath": "$output.icIntents",
          "name": "icIntents"
        }
      ],
      "transitions": [
        {
          "_id": "2dcba8ce-9483-4ea8-9d77-c6afcad05d29-ac03b1ef-c32a-4fce-8547-e1cbda663cd0",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "Process Automated Payments"
            }
          ],
          "nextTask": "ac03b1ef-c32a-4fce-8547-e1cbda663cd0"
        },
        {
          "_id": "2dcba8ce-9483-4ea8-9d77-c6afcad05d29-22270bcd-7dc2-4386-956e-b99edf2afa0e",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "Ensure Compliance"
            }
          ],
          "nextTask": "22270bcd-7dc2-4386-956e-b99edf2afa0e"
        },
        {
          "_id": "2dcba8ce-9483-4ea8-9d77-c6afcad05d29-f199f589-6d1a-4427-95d2-b943801e40ba",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            },
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.state",
              "value": "end"
            }
          ],
          "nextTask": "f199f589-6d1a-4427-95d2-b943801e40ba"
        }
      ]
    },
    {
      "_id": "ac03b1ef-c32a-4fce-8547-e1cbda663cd0",
      "type": "Workflow",
      "config": {
        "name": "Intent - Process Automated Payments",
        "description": "Workflow for intent - Process Automated Payments",
        "workflowId": "ca31ddc8-f4ad-4ec2-afb5-a1773684be66"
      },
      "transitions": [
        {
          "_id": "ac03b1ef-c32a-4fce-8547-e1cbda663cd0-2dcba8ce-9483-4ea8-9d77-c6afcad05d29",
          "name": "Mini agent execution completed",
          "nextTask": "2dcba8ce-9483-4ea8-9d77-c6afcad05d29"
        }
      ]
    },
    {
      "_id": "22270bcd-7dc2-4386-956e-b99edf2afa0e",
      "type": "Workflow",
      "config": {
        "name": "Intent - Ensure Compliance",
        "description": "Workflow for intent - Ensure Compliance",
        "workflowId": "636ddb68-9414-4a30-b24e-78d4b5565e57"
      },
      "transitions": [
        {
          "_id": "22270bcd-7dc2-4386-956e-b99edf2afa0e-2dcba8ce-9483-4ea8-9d77-c6afcad05d29",
          "name": "Mini agent execution completed",
          "nextTask": "2dcba8ce-9483-4ea8-9d77-c6afcad05d29"
        }
      ]
    },
    {
      "_id": "7a30500f-e25a-4074-8783-2d9dd9e1faeb",
      "transitions": [
        {
          "_id": "7a30500f-e25a-4074-8783-2d9dd9e1faeb-f199f589-6d1a-4427-95d2-b943801e40ba",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "f199f589-6d1a-4427-95d2-b943801e40ba"
        }
      ],
      "type": "Output",
      "config": {
        "name": "Output",
        "description": "Output the response to the user",
        "type": "external",
        "text": "Unable to complete task $agent.query"
      }
    },
    {
      "_id": "a9cdc05b-5951-4559-979d-62494bdf8dbc",
      "transitions": [
        {
          "_id": "a9cdc05b-5951-4559-979d-62494bdf8dbc-f199f589-6d1a-4427-95d2-b943801e40ba",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "f199f589-6d1a-4427-95d2-b943801e40ba"
        }
      ],
      "type": "Display",
      "config": {
        "name": "Display",
        "description": "Display the response to the user",
        "type": "text",
        "text": "$input.content"
      }
    }
  ],
  "type": "Conversational",
  "version": "latest"
}