{
  "_id": "f969e2b8-7143-465f-bc26-82139efbcefa",
  "aiPersonaId": "68477062-6637-4338-946b-731946563ad0",
  "integrationId": "ma-reminder-sender-2931-primary-workflow-for-reminder-sender",
  "isMiniAgentPrimaryWorkflow": true,
  "name": "Primary Workflow for Reminder Sender",
  "publisherAccountId": "6a852086-e073-4065-8345-aff4b98d9ac1",
  "startTaskId": "7e009338-6ab7-4acf-8171-1a1df3e53b93",
  "status": "Active",
  "tasks": [
    {
      "_id": "7e009338-6ab7-4acf-8171-1a1df3e53b93",
      "type": "PassThrough",
      "config": {
        "name": "Pass Through",
        "description": "Pass through the input to the output"
      },
      "transitions": [
        {
          "_id": "2c302acc-c342-42f0-99a5-552c8cc0ba6c-7e009338-6ab7-4acf-8171-1a1df3e53b93",
          "nextTask": "2c302acc-c342-42f0-99a5-552c8cc0ba6c",
          "name": "If query doesnt exists",
          "rules": [
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "9ae2728a-6675-4c28-8941-04f29e4510aa-7e009338-6ab7-4acf-8171-1a1df3e53b93",
          "nextTask": "9ae2728a-6675-4c28-8941-04f29e4510aa",
          "name": "If intents are already classified",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.intents"
            },
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "7e009338-6ab7-4acf-8171-1a1df3e53b93-c332e6d6-6141-4e5a-a267-c6cc04150c61",
          "name": "If query exists",
          "nextTask": "c332e6d6-6141-4e5a-a267-c6cc04150c61",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            },
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.intents"
            }
          ]
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$input.query"
        },
        {
          "name": "rawQuery",
          "referencePath": "$input.rawQuery"
        },
        {
          "name": "conversationId",
          "referencePath": "$input.conversationId"
        }
      ]
    },
    {
      "_id": "2c302acc-c342-42f0-99a5-552c8cc0ba6c",
      "type": "Input",
      "config": {
        "name": "User Input",
        "description": "Get user input",
        "type": "string"
      },
      "transitions": [
        {
          "_id": "2c302acc-c342-42f0-99a5-552c8cc0ba6c-c332e6d6-6141-4e5a-a267-c6cc04150c61",
          "name": "Default",
          "nextTask": "c332e6d6-6141-4e5a-a267-c6cc04150c61"
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$output.userInput"
        },
        {
          "name": "rawQuery",
          "referencePath": "$output.userInput"
        },
        {
          "name": "selfLoopMiniAgent",
          "referencePath": "true"
        }
      ]
    },
    {
      "_id": "c332e6d6-6141-4e5a-a267-c6cc04150c61",
      "type": "Loader",
      "config": {
        "name": "Loader",
        "description": "Display loader message",
        "type": "loader",
        "text": "Just a moment... identifying the best approach to assist you."
      },
      "transitions": [
        {
          "_id": "c332e6d6-6141-4e5a-a267-c6cc04150c61-81b72e76-9896-4bd4-987b-e64036b15164",
          "name": "Default",
          "nextTask": "81b72e76-9896-4bd4-987b-e64036b15164"
        }
      ]
    },
    {
      "_id": "81b72e76-9896-4bd4-987b-e64036b15164",
      "type": "IntentClassification",
      "config": {
        "name": "Intent Classification",
        "description": "Classify the intent of the user message",
        "modelId": "4cf651d9-edf3-455f-a22e-53cc67fcc07b",
        "intents": [
          {
            "name": "Send Payment Reminder",
            "description": "Sends email reminders to users about overdue payments.",
            "examples": [
              "Send a reminder for overdue invoice 123.",
              "Email a payment reminder to the client.",
              "Notify users about overdue payments.",
              "Send a thankyou mail or message for paid clients",
              "Send a message or mails to clients"
            ]
          }
        ],
        "query": "$agent.query"
      },
      "transitions": [
        {
          "_id": "81b72e76-9896-4bd4-987b-e64036b15164-9ae2728a-6675-4c28-8941-04f29e4510aa",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "true"
            }
          ],
          "nextTask": "9ae2728a-6675-4c28-8941-04f29e4510aa"
        },
        {
          "_id": "81b72e76-9896-4bd4-987b-e64036b15164-a5640103-ab98-4277-893f-a35a5762a9c3",
          "name": "If No Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "false"
            }
          ],
          "nextTask": "a5640103-ab98-4277-893f-a35a5762a9c3"
        }
      ]
    },
    {
      "_id": "9ae2728a-6675-4c28-8941-04f29e4510aa",
      "type": "JSFunction",
      "config": {
        "name": "JS Function",
        "description": "Execute JS function",
        "code": "\nconst main = () => {\n    const currentExecutionId = _id;\n    const intents = agent?.icIntents?.[currentExecutionId] || input.intents;\n    const currentIndex = agent?.icLoopIndexes?.[currentExecutionId] || 0;\n    const currentIntent = intents[currentIndex] || {};\n    const { intent, task } = currentIntent;\n    const state = currentIndex === intents.length ? 'end' : 'continue'\n    const icLoopIndexes = { ...(agent?.icLoopIndexes || {}), [_id]: state === 'end' ? undefined : currentIndex + 1 };\n    const icIntents = { ...(agent?.icIntents || {}), [_id]: state === 'end' ? undefined : intents };\n    return { ...input, intent, state: currentIndex === intents.length ? 'end' : 'continue', icLoopIndexes, icIntents, query: task };\n};\n\nmain()\n"
      },
      "globalVariables": [
        {
          "referencePath": "$output.icLoopIndexes",
          "name": "icLoopIndexes"
        },
        {
          "referencePath": "$output.icIntents",
          "name": "icIntents"
        }
      ],
      "transitions": [
        {
          "_id": "9ae2728a-6675-4c28-8941-04f29e4510aa-987ffd61-6145-4e51-b20a-5515d0cba1ef",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "Send Payment Reminder"
            }
          ],
          "nextTask": "987ffd61-6145-4e51-b20a-5515d0cba1ef"
        },
        {
          "_id": "9ae2728a-6675-4c28-8941-04f29e4510aa-2c302acc-c342-42f0-99a5-552c8cc0ba6c",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            },
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.state",
              "value": "end"
            }
          ],
          "nextTask": "2c302acc-c342-42f0-99a5-552c8cc0ba6c"
        }
      ]
    },
    {
      "_id": "987ffd61-6145-4e51-b20a-5515d0cba1ef",
      "type": "Workflow",
      "config": {
        "name": "Intent - Send Payment Reminder",
        "description": "Workflow for intent - Send Payment Reminder",
        "workflowId": "6a0a837d-c01a-4ca5-b6ab-742b2590edf2"
      },
      "transitions": [
        {
          "_id": "987ffd61-6145-4e51-b20a-5515d0cba1ef-9ae2728a-6675-4c28-8941-04f29e4510aa",
          "name": "Mini agent execution completed",
          "nextTask": "9ae2728a-6675-4c28-8941-04f29e4510aa"
        }
      ]
    },
    {
      "_id": "a5640103-ab98-4277-893f-a35a5762a9c3",
      "transitions": [
        {
          "_id": "a5640103-ab98-4277-893f-a35a5762a9c3-2c302acc-c342-42f0-99a5-552c8cc0ba6c",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "2c302acc-c342-42f0-99a5-552c8cc0ba6c"
        }
      ],
      "type": "Output",
      "config": {
        "name": "Output",
        "description": "Output the response to the user",
        "type": "external",
        "text": "Unable to complete task $agent.query"
      }
    },
    {
      "_id": "808023b5-1fd2-4d33-8934-ff2636ea9615",
      "transitions": [
        {
          "_id": "808023b5-1fd2-4d33-8934-ff2636ea9615-2c302acc-c342-42f0-99a5-552c8cc0ba6c",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "2c302acc-c342-42f0-99a5-552c8cc0ba6c"
        }
      ],
      "type": "Display",
      "config": {
        "name": "Display",
        "description": "Display the response to the user",
        "type": "text",
        "text": "$input.content"
      }
    }
  ],
  "type": "Conversational",
  "version": "latest"
}