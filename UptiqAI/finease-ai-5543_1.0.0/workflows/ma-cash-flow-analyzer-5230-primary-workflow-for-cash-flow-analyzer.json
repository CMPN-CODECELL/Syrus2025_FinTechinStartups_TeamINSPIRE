{
  "_id": "f6cb9966-ec02-4fae-912f-bf7ea527242a",
  "aiPersonaId": "68477062-6637-4338-946b-731946563ad0",
  "integrationId": "ma-cash-flow-analyzer-5230-primary-workflow-for-cash-flow-analyzer",
  "isMiniAgentPrimaryWorkflow": true,
  "name": "Primary Workflow for Cash Flow Analyzer",
  "publisherAccountId": "6a852086-e073-4065-8345-aff4b98d9ac1",
  "startTaskId": "14ccd5ac-5fbd-49f4-a897-494c993cf938",
  "status": "Active",
  "tasks": [
    {
      "_id": "14ccd5ac-5fbd-49f4-a897-494c993cf938",
      "type": "PassThrough",
      "config": {
        "name": "Pass Through",
        "description": "Pass through the input to the output"
      },
      "transitions": [
        {
          "_id": "6f1ec4ad-71b6-4b2d-9280-1aa0464c25e7-14ccd5ac-5fbd-49f4-a897-494c993cf938",
          "nextTask": "6f1ec4ad-71b6-4b2d-9280-1aa0464c25e7",
          "name": "If query doesnt exists",
          "rules": [
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "112d83a4-090d-425c-a2de-1f997e602994-14ccd5ac-5fbd-49f4-a897-494c993cf938",
          "nextTask": "112d83a4-090d-425c-a2de-1f997e602994",
          "name": "If intents are already classified",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.intents"
            },
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "14ccd5ac-5fbd-49f4-a897-494c993cf938-9e210bf4-da9b-4974-a6ac-01c3fff19f17",
          "name": "If query exists",
          "nextTask": "9e210bf4-da9b-4974-a6ac-01c3fff19f17",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            },
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.intents"
            }
          ]
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$input.query"
        },
        {
          "name": "rawQuery",
          "referencePath": "$input.rawQuery"
        },
        {
          "name": "conversationId",
          "referencePath": "$input.conversationId"
        }
      ]
    },
    {
      "_id": "6f1ec4ad-71b6-4b2d-9280-1aa0464c25e7",
      "type": "Input",
      "config": {
        "name": "User Input",
        "description": "Get user input",
        "type": "string"
      },
      "transitions": [
        {
          "_id": "6f1ec4ad-71b6-4b2d-9280-1aa0464c25e7-9e210bf4-da9b-4974-a6ac-01c3fff19f17",
          "name": "Default",
          "nextTask": "9e210bf4-da9b-4974-a6ac-01c3fff19f17"
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$output.userInput"
        },
        {
          "name": "rawQuery",
          "referencePath": "$output.userInput"
        },
        {
          "name": "selfLoopMiniAgent",
          "referencePath": "true"
        }
      ]
    },
    {
      "_id": "9e210bf4-da9b-4974-a6ac-01c3fff19f17",
      "type": "Loader",
      "config": {
        "name": "Loader",
        "description": "Display loader message",
        "type": "loader",
        "text": "Just a moment... identifying the best approach to assist you."
      },
      "transitions": [
        {
          "_id": "9e210bf4-da9b-4974-a6ac-01c3fff19f17-b79e1049-043f-4c66-9a6e-3939957c24c7",
          "name": "Default",
          "nextTask": "b79e1049-043f-4c66-9a6e-3939957c24c7"
        }
      ]
    },
    {
      "_id": "b79e1049-043f-4c66-9a6e-3939957c24c7",
      "type": "IntentClassification",
      "config": {
        "name": "Intent Classification",
        "description": "Classify the intent of the user message",
        "modelId": "4cf651d9-edf3-455f-a22e-53cc67fcc07b",
        "intents": [
          {
            "name": "Track Income and Expenses",
            "description": "Monitors and records all income and expenses to maintain accurate financial records.",
            "examples": [
              "Track all expenses for this month.",
              "Record the income from the latest sales.",
              "Monitor the cash flow for the last quarter."
            ]
          },
          {
            "name": "Generate Cash Flow Insights",
            "description": "Analyzes cash flow data to provide insights and trends.",
            "examples": [
              "What are the cash flow trends for this year?",
              "Generate a report on cash flow insights.",
              "Provide insights on our current cash flow."
            ]
          }
        ],
        "query": "$agent.query"
      },
      "transitions": [
        {
          "_id": "b79e1049-043f-4c66-9a6e-3939957c24c7-112d83a4-090d-425c-a2de-1f997e602994",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "true"
            }
          ],
          "nextTask": "112d83a4-090d-425c-a2de-1f997e602994"
        },
        {
          "_id": "b79e1049-043f-4c66-9a6e-3939957c24c7-d283ee5b-7354-4220-9c4e-476bbea6514e",
          "name": "If No Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "false"
            }
          ],
          "nextTask": "d283ee5b-7354-4220-9c4e-476bbea6514e"
        }
      ]
    },
    {
      "_id": "112d83a4-090d-425c-a2de-1f997e602994",
      "type": "JSFunction",
      "config": {
        "name": "JS Function",
        "description": "Execute JS function",
        "code": "\nconst main = () => {\n    const currentExecutionId = _id;\n    const intents = agent?.icIntents?.[currentExecutionId] || input.intents;\n    const currentIndex = agent?.icLoopIndexes?.[currentExecutionId] || 0;\n    const currentIntent = intents[currentIndex] || {};\n    const { intent, task } = currentIntent;\n    const state = currentIndex === intents.length ? 'end' : 'continue'\n    const icLoopIndexes = { ...(agent?.icLoopIndexes || {}), [_id]: state === 'end' ? undefined : currentIndex + 1 };\n    const icIntents = { ...(agent?.icIntents || {}), [_id]: state === 'end' ? undefined : intents };\n    return { ...input, intent, state: currentIndex === intents.length ? 'end' : 'continue', icLoopIndexes, icIntents, query: task };\n};\n\nmain()\n"
      },
      "globalVariables": [
        {
          "referencePath": "$output.icLoopIndexes",
          "name": "icLoopIndexes"
        },
        {
          "referencePath": "$output.icIntents",
          "name": "icIntents"
        }
      ],
      "transitions": [
        {
          "_id": "112d83a4-090d-425c-a2de-1f997e602994-5b638a26-d1a9-4d84-b8e2-d9ed34df0ff9",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "Track Income and Expenses"
            }
          ],
          "nextTask": "5b638a26-d1a9-4d84-b8e2-d9ed34df0ff9"
        },
        {
          "_id": "112d83a4-090d-425c-a2de-1f997e602994-218bd409-4a9b-4c0f-989a-29fc1aea5e7f",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "Generate Cash Flow Insights"
            }
          ],
          "nextTask": "218bd409-4a9b-4c0f-989a-29fc1aea5e7f"
        },
        {
          "_id": "112d83a4-090d-425c-a2de-1f997e602994-6f1ec4ad-71b6-4b2d-9280-1aa0464c25e7",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            },
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.state",
              "value": "end"
            }
          ],
          "nextTask": "6f1ec4ad-71b6-4b2d-9280-1aa0464c25e7"
        }
      ]
    },
    {
      "_id": "5b638a26-d1a9-4d84-b8e2-d9ed34df0ff9",
      "type": "Workflow",
      "config": {
        "name": "Intent - Track Income and Expenses",
        "description": "Workflow for intent - Track Income and Expenses",
        "workflowId": "13ae3ab1-a89f-4dbd-9b81-5428d54e8938"
      },
      "transitions": [
        {
          "_id": "5b638a26-d1a9-4d84-b8e2-d9ed34df0ff9-112d83a4-090d-425c-a2de-1f997e602994",
          "name": "Mini agent execution completed",
          "nextTask": "112d83a4-090d-425c-a2de-1f997e602994"
        }
      ]
    },
    {
      "_id": "218bd409-4a9b-4c0f-989a-29fc1aea5e7f",
      "type": "Workflow",
      "config": {
        "name": "Intent - Generate Cash Flow Insights",
        "description": "Workflow for intent - Generate Cash Flow Insights",
        "workflowId": "2c679b42-a677-4e9f-9d65-3924257319b3"
      },
      "transitions": [
        {
          "_id": "218bd409-4a9b-4c0f-989a-29fc1aea5e7f-112d83a4-090d-425c-a2de-1f997e602994",
          "name": "Mini agent execution completed",
          "nextTask": "112d83a4-090d-425c-a2de-1f997e602994"
        }
      ]
    },
    {
      "_id": "d283ee5b-7354-4220-9c4e-476bbea6514e",
      "transitions": [
        {
          "_id": "d283ee5b-7354-4220-9c4e-476bbea6514e-6f1ec4ad-71b6-4b2d-9280-1aa0464c25e7",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "6f1ec4ad-71b6-4b2d-9280-1aa0464c25e7"
        }
      ],
      "type": "Output",
      "config": {
        "name": "Output",
        "description": "Output the response to the user",
        "type": "external",
        "text": "Unable to complete task $agent.query"
      }
    },
    {
      "_id": "5e70e660-c597-48be-a636-bb2b85270a36",
      "transitions": [
        {
          "_id": "5e70e660-c597-48be-a636-bb2b85270a36-6f1ec4ad-71b6-4b2d-9280-1aa0464c25e7",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "6f1ec4ad-71b6-4b2d-9280-1aa0464c25e7"
        }
      ],
      "type": "Display",
      "config": {
        "name": "Display",
        "description": "Display the response to the user",
        "type": "text",
        "text": "$input.content"
      }
    }
  ],
  "type": "Conversational",
  "version": "latest"
}