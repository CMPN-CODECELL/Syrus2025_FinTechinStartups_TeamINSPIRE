{
  "_id": "7f1e402c-1cea-471b-8811-eaa523fb6092",
  "aiPersonaId": "68477062-6637-4338-946b-731946563ad0",
  "integrationId": "ma-overdue-payment-detector-0571-primary-workflow-for-overdue-payment-detector",
  "isMiniAgentPrimaryWorkflow": true,
  "name": "Primary Workflow for Overdue Payment Detector",
  "publisherAccountId": "6a852086-e073-4065-8345-aff4b98d9ac1",
  "startTaskId": "1e841588-a2fd-4915-ab94-18f22bd71918",
  "status": "Active",
  "tasks": [
    {
      "_id": "1e841588-a2fd-4915-ab94-18f22bd71918",
      "type": "PassThrough",
      "config": {
        "name": "Pass Through",
        "description": "Pass through the input to the output"
      },
      "transitions": [
        {
          "_id": "fab1a442-50b2-4ee6-8bd1-0f5fed6ce19a-1e841588-a2fd-4915-ab94-18f22bd71918",
          "nextTask": "fab1a442-50b2-4ee6-8bd1-0f5fed6ce19a",
          "name": "If query doesnt exists",
          "rules": [
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "ef51b087-e374-4169-812e-8116b91f66ac-1e841588-a2fd-4915-ab94-18f22bd71918",
          "nextTask": "ef51b087-e374-4169-812e-8116b91f66ac",
          "name": "If intents are already classified",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.intents"
            },
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "1e841588-a2fd-4915-ab94-18f22bd71918-f4989f8d-b3a4-41af-91a4-df600af87268",
          "name": "If query exists",
          "nextTask": "f4989f8d-b3a4-41af-91a4-df600af87268",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            },
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.intents"
            }
          ]
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$input.query"
        },
        {
          "name": "rawQuery",
          "referencePath": "$input.rawQuery"
        },
        {
          "name": "conversationId",
          "referencePath": "$input.conversationId"
        }
      ]
    },
    {
      "_id": "fab1a442-50b2-4ee6-8bd1-0f5fed6ce19a",
      "type": "Input",
      "config": {
        "name": "User Input",
        "description": "Get user input",
        "type": "string"
      },
      "transitions": [
        {
          "_id": "fab1a442-50b2-4ee6-8bd1-0f5fed6ce19a-f4989f8d-b3a4-41af-91a4-df600af87268",
          "name": "Default",
          "nextTask": "f4989f8d-b3a4-41af-91a4-df600af87268"
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$output.userInput"
        },
        {
          "name": "rawQuery",
          "referencePath": "$output.userInput"
        },
        {
          "name": "selfLoopMiniAgent",
          "referencePath": "true"
        }
      ]
    },
    {
      "_id": "f4989f8d-b3a4-41af-91a4-df600af87268",
      "type": "Loader",
      "config": {
        "name": "Loader",
        "description": "Display loader message",
        "type": "loader",
        "text": "Just a moment... identifying the best approach to assist you."
      },
      "transitions": [
        {
          "_id": "f4989f8d-b3a4-41af-91a4-df600af87268-1dde9a05-2e99-4a48-bc06-c7f554894578",
          "name": "Default",
          "nextTask": "1dde9a05-2e99-4a48-bc06-c7f554894578"
        }
      ]
    },
    {
      "_id": "1dde9a05-2e99-4a48-bc06-c7f554894578",
      "type": "IntentClassification",
      "config": {
        "name": "Intent Classification",
        "description": "Classify the intent of the user message",
        "modelId": "4cf651d9-edf3-455f-a22e-53cc67fcc07b",
        "intents": [
          {
            "name": "Monitor Due Dates",
            "description": "Keeps track of invoice due dates to ensure timely payments.",
            "examples": [
              "Check the due date for invoice 67890.",
              "When is the payment due for this invoice?",
              "Track the due dates for all pending invoices."
            ]
          },
          {
            "name": "Identify Overdue Payments",
            "description": "Identifies invoices that have not been paid by their due date.",
            "examples": [
              "List all overdue invoices.",
              "Which payments are overdue?",
              "Identify any overdue payments in the system.",
              "List all Paid invoices.",
              "List all unpaid or balance invoices."
            ]
          },
          {
            "name": "Flag Overdue Invoices",
            "description": "Flags overdue invoices for sending reminders.",
            "examples": [
              "Flag this invoice as overdue.",
              "Mark overdue invoices for follow-up.",
              "Set a reminder for overdue payments."
            ]
          }
        ],
        "query": "$agent.query"
      },
      "transitions": [
        {
          "_id": "1dde9a05-2e99-4a48-bc06-c7f554894578-ef51b087-e374-4169-812e-8116b91f66ac",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "true"
            }
          ],
          "nextTask": "ef51b087-e374-4169-812e-8116b91f66ac"
        },
        {
          "_id": "1dde9a05-2e99-4a48-bc06-c7f554894578-bbfe3c05-127a-4e93-b5e0-25730b70ef97",
          "name": "If No Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "false"
            }
          ],
          "nextTask": "bbfe3c05-127a-4e93-b5e0-25730b70ef97"
        }
      ]
    },
    {
      "_id": "ef51b087-e374-4169-812e-8116b91f66ac",
      "type": "JSFunction",
      "config": {
        "name": "JS Function",
        "description": "Execute JS function",
        "code": "\nconst main = () => {\n    const currentExecutionId = _id;\n    const intents = agent?.icIntents?.[currentExecutionId] || input.intents;\n    const currentIndex = agent?.icLoopIndexes?.[currentExecutionId] || 0;\n    const currentIntent = intents[currentIndex] || {};\n    const { intent, task } = currentIntent;\n    const state = currentIndex === intents.length ? 'end' : 'continue'\n    const icLoopIndexes = { ...(agent?.icLoopIndexes || {}), [_id]: state === 'end' ? undefined : currentIndex + 1 };\n    const icIntents = { ...(agent?.icIntents || {}), [_id]: state === 'end' ? undefined : intents };\n    return { ...input, intent, state: currentIndex === intents.length ? 'end' : 'continue', icLoopIndexes, icIntents, query: task };\n};\n\nmain()\n"
      },
      "globalVariables": [
        {
          "referencePath": "$output.icLoopIndexes",
          "name": "icLoopIndexes"
        },
        {
          "referencePath": "$output.icIntents",
          "name": "icIntents"
        }
      ],
      "transitions": [
        {
          "_id": "ef51b087-e374-4169-812e-8116b91f66ac-e5f7275a-5997-46a7-8aa8-ec09a8975dfc",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "Monitor Due Dates"
            }
          ],
          "nextTask": "e5f7275a-5997-46a7-8aa8-ec09a8975dfc"
        },
        {
          "_id": "ef51b087-e374-4169-812e-8116b91f66ac-cd6b3468-04dd-4035-807d-28d399787975",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "Identify Overdue Payments"
            }
          ],
          "nextTask": "cd6b3468-04dd-4035-807d-28d399787975"
        },
        {
          "_id": "ef51b087-e374-4169-812e-8116b91f66ac-6bb14859-1785-420f-8410-28daad449a87",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "Flag Overdue Invoices"
            }
          ],
          "nextTask": "6bb14859-1785-420f-8410-28daad449a87"
        },
        {
          "_id": "ef51b087-e374-4169-812e-8116b91f66ac-fab1a442-50b2-4ee6-8bd1-0f5fed6ce19a",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            },
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.state",
              "value": "end"
            }
          ],
          "nextTask": "fab1a442-50b2-4ee6-8bd1-0f5fed6ce19a"
        }
      ]
    },
    {
      "_id": "e5f7275a-5997-46a7-8aa8-ec09a8975dfc",
      "type": "Workflow",
      "config": {
        "name": "Intent - Monitor Due Dates",
        "description": "Workflow for intent - Monitor Due Dates",
        "workflowId": "6873333f-8fce-4b2b-9677-3681f94ccaef"
      },
      "transitions": [
        {
          "_id": "e5f7275a-5997-46a7-8aa8-ec09a8975dfc-ef51b087-e374-4169-812e-8116b91f66ac",
          "name": "Mini agent execution completed",
          "nextTask": "ef51b087-e374-4169-812e-8116b91f66ac"
        }
      ]
    },
    {
      "_id": "cd6b3468-04dd-4035-807d-28d399787975",
      "type": "Workflow",
      "config": {
        "name": "Intent - Identify Overdue Payments",
        "description": "Workflow for intent - Identify Overdue Payments",
        "workflowId": "8c848d42-149c-49d4-92dc-0edc3410d0a3"
      },
      "transitions": [
        {
          "_id": "cd6b3468-04dd-4035-807d-28d399787975-ef51b087-e374-4169-812e-8116b91f66ac",
          "name": "Mini agent execution completed",
          "nextTask": "ef51b087-e374-4169-812e-8116b91f66ac"
        }
      ]
    },
    {
      "_id": "6bb14859-1785-420f-8410-28daad449a87",
      "type": "Workflow",
      "config": {
        "name": "Intent - Flag Overdue Invoices",
        "description": "Workflow for intent - Flag Overdue Invoices",
        "workflowId": "099acdea-51be-4319-9e97-50bfe7e8f27d"
      },
      "transitions": [
        {
          "_id": "6bb14859-1785-420f-8410-28daad449a87-ef51b087-e374-4169-812e-8116b91f66ac",
          "name": "Mini agent execution completed",
          "nextTask": "ef51b087-e374-4169-812e-8116b91f66ac"
        }
      ]
    },
    {
      "_id": "bbfe3c05-127a-4e93-b5e0-25730b70ef97",
      "transitions": [
        {
          "_id": "bbfe3c05-127a-4e93-b5e0-25730b70ef97-fab1a442-50b2-4ee6-8bd1-0f5fed6ce19a",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "fab1a442-50b2-4ee6-8bd1-0f5fed6ce19a"
        }
      ],
      "type": "Output",
      "config": {
        "name": "Output",
        "description": "Output the response to the user",
        "type": "external",
        "text": "Unable to complete task $agent.query"
      }
    },
    {
      "_id": "c9e558fb-224b-426f-873b-030aba1b4e05",
      "transitions": [
        {
          "_id": "c9e558fb-224b-426f-873b-030aba1b4e05-fab1a442-50b2-4ee6-8bd1-0f5fed6ce19a",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "fab1a442-50b2-4ee6-8bd1-0f5fed6ce19a"
        }
      ],
      "type": "Display",
      "config": {
        "name": "Display",
        "description": "Display the response to the user",
        "type": "text",
        "text": "$input.content"
      }
    }
  ],
  "type": "Conversational",
  "version": "latest"
}